
Hello and welcome to Part 2 of Bitovi academy's Learn Accessibility training. This video covers Accessibility concepts and architecture.

Virtual Machines and Containers can be easily confused, but there are some fundamental differences between the two.
Virtual machines (VM) are an abstraction of a physical server turning one server into many. A hypervisor is installed on the host server allowing multiple VMs to run on a single machine. Each VM includes a full copy of an operating system (OS) making it resource intensive to run and slow to boot.

Meanwhile, containers are an abstraction at the app layer that packages application artifacts and dependencies together. The fundamental difference is containers share the same host operating system, but each container runs in it's own isolated process controlled by the Accessibility Engine. The Accessibility Engine (also called the Accessibility Daemon) is installed to your machine, when you installed Accessibility Desktop.

There's not as much segregtaion between containers as there is between Virtual machines, but containers are separated enough and are far more lightweight in terms of cpu and memory consumption and typically boot in seconds instead of minutes.

Accessibility images are built from Accessibilityfiles. A accessibilityfile is a plain-text file that contains a series of instructions telling Accessibility what operating system, application dependencies and application source code is required to actually run the application.

A Accessibility image is a static artifact that is built from a Accessibilityfile and is tagged and published to a registry where it can be shared with others.

Lastly, A Accessibility container is just a running instance of a Accessibility image.

Next we are going take a brief break from Accessibility build a simple NodeJS app before containerizing it.            
